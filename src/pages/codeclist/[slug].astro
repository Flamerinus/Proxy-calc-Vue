---
import Layout from "@/layouts/Layout.astro";
import "@/styles/globals.css";
import {
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbList,
  BreadcrumbPage,
  BreadcrumbSeparator,
} from "@/components/ui/breadcrumb";

import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";

import Selector from "@/components/Selector.vue";

import { Home } from 'lucide-vue-next';

import { getCollection, type CollectionEntry } from "astro:content";

export const getStaticPaths = async () => {
  const codecs = await getCollection("codecs");
  const paths = codecs.map((codec) => {
    return {
      params: {
        slug: codec.slug,
      },
      props: {
        codec,
      },
    };
  });
  return paths;
};

type Props = {
  codec: CollectionEntry<"codecs">;
};

const { codec } = Astro.props;

//console.dir(codec, { depth: null });
---

<Layout title={"Proxy Calc > " + codec.data.title}>
  <main>
    <div class="inline-flex items-center">
      <Breadcrumb>
        <BreadcrumbList>
          <BreadcrumbItem>
            <BreadcrumbLink >
              <a href="/">
              <Home size={20} stroke-width={1.5}/>
              </a>
            </BreadcrumbLink>
          </BreadcrumbItem>
          <BreadcrumbSeparator />
          <BreadcrumbItem>
            <BreadcrumbLink>
              <a href="/codeclist">Codec list</a>
            </BreadcrumbLink>
          </BreadcrumbItem>
          <BreadcrumbSeparator />
          <BreadcrumbItem>
            <BreadcrumbPage>{codec.data.title}</BreadcrumbPage>
          </BreadcrumbItem>
        </BreadcrumbList>
      </Breadcrumb>
    </div>

    <div class="w-full inline-flex justify-items-center">
      <Card
        class="my-4 mx-auto w-full sm:w-4/5 md:w-3/5 lg:w-3/5 xl:w-3/5 min-w-80"
      >
        <CardHeader class="text-center">
          <CardTitle>{codec.data.name}</CardTitle>
          <CardDescription>Bitrate: {codec.data.bitrate}</CardDescription>
        </CardHeader>
        <CardContent>
          <Selector resolvalues={codec} client:load />
        </CardContent>
        <CardFooter>
          <p>ProxyCalc</p>
        </CardFooter>
      </Card>
    </div>
    <div class="my-4">
      {codec.body}
    </div>
  </main>
</Layout>
